// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using REST_SEP4.Database;

namespace REST_SEP4.Migrations
{
    [DbContext(typeof(RoomContext))]
    [Migration("20200429062047_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.3.20181.2");

            modelBuilder.Entity("REST_SEP4.Datamodel.Artwork", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("author")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<string>("image")
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Artworks");
                });

            modelBuilder.Entity("REST_SEP4.Datamodel.ArtworkMeasurements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArtworkId")
                        .HasColumnType("TEXT");

                    b.Property<int>("maxCo2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxHumidity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxLight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxTemp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minCo2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minHumidity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minLight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minTemp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArtworkId");

                    b.ToTable("ArtWorkMeasurements");
                });

            modelBuilder.Entity("REST_SEP4.Datamodel.Measurements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("co2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("humidity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("light")
                        .HasColumnType("INTEGER");

                    b.Property<int>("temperature")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("REST_SEP4.Datamodel.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("currentCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<string>("locationCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("roomType")
                        .HasColumnType("TEXT");

                    b.Property<int>("totalCapacity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("REST_SEP4.Datamodel.Artwork", b =>
                {
                    b.HasOne("REST_SEP4.Datamodel.Room", null)
                        .WithMany("artworkList")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("REST_SEP4.Datamodel.ArtworkMeasurements", b =>
                {
                    b.HasOne("REST_SEP4.Datamodel.Artwork", null)
                        .WithMany("artworkMeasurements")
                        .HasForeignKey("ArtworkId");
                });

            modelBuilder.Entity("REST_SEP4.Datamodel.Measurements", b =>
                {
                    b.HasOne("REST_SEP4.Datamodel.Room", null)
                        .WithMany("measurementList")
                        .HasForeignKey("RoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
